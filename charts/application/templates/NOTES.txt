Thank you for installing {{ include "application.fullname" . }}.

{{- if .Values.repoUrl }}
GitHub Repository: {{ .Values.repoUrl }}
{{- end }}

Application Details:
-------------------
* Namespace: {{ .Release.Namespace }}
* Release Name: {{ .Release.Name }}
* Chart Version: {{ .Chart.Version }}
* App Version: {{ .Chart.AppVersion }}

Deployment Configuration:
-----------------------
* Replicas: {{ .Values.replicaCount }}
* Image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
* Pull Policy: {{ .Values.image.pullPolicy }}
* Update Strategy: {{ .Values.strategy.type }}
{{- if eq .Values.strategy.type "RollingUpdate" }}
  - Max Surge: {{ .Values.strategy.rollingUpdate.maxSurge }}
  - Max Unavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable }}
{{- end }}

Service Configuration:
--------------------
* Type: {{ .Values.service.type }}

{{- if .Values.ingress.enabled }}
Ingress Configuration:
--------------------
* Ingress Class: {{ .Values.ingress.className }}
* Hosts:
{{- range $host := .Values.ingress.hosts }}
  - {{ $host.host }}
{{- range .paths }}
    Path: {{ .path }}
{{- end }}
{{- end }}
{{- end }}

Access Instructions:
------------------
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
{{- range .paths }}
Your application can be accessed via: http{{ if $host.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
{{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
To access your application:

  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "application.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
To access your application:

NOTE: It may take a few minutes for the LoadBalancer IP to be available.
      You can watch its status by running:
      kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "application.fullname" . }}

  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "application.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
To access your application using port-forward:

  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "application.fullname" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT

Then visit http://127.0.0.1:8080
{{- end }}

For more details about the deployment, run:
  kubectl get all -n {{ .Release.Namespace }} -l "app.kubernetes.io/instance={{ .Release.Name }}"
